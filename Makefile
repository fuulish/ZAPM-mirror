# to build a single user version, make clean and then make zapm-oneuser
#

OBJS = Global.o \
Armor.o Artifact.o Attack.o BunkerRooms.o Canister.o Cave.o \
Corpse.o Creature.o Droid.o Event.o Fight.o FloppyDisk.o Game.o \
God.o Help.o Hero.o Implant.o Interface.o Inventory.o Mainframe.o \
Map.o Money.o Monster.o MonsterAI.o Mutant.o Object.o ObjectParser.o \
Options.o Path.o Profession.o RabbitLevel.o RayGun.o Render.o Room.o \
SaveLoad.o Shop.o Skills.o Tombstone.o Tool.o Town.o TwistyRooms.o \
Util.o Vat.o Vision.o Weapon.o \
main.o 

ZAPMOWNER= games
GAMEDIR= "/usr/games"
DATADIR= "/usr/games/lib/zapmdir"

LIBS= -lpanel -lcurses
INCLUDE=
LDFLAGS= -flat_namespace
CXX= c++

CXXFLAGS=-Wall -Wno-char-subscripts -g $(INCLUDE)

all: zapm-multiuser

install: zapm-multiuser
	mkdir -p $(GAMEDIR)
	cp zapm $(GAMEDIR)
	mkdir -p $(DATADIR)
	-chown $(ZAPMOWNER) $(DATADIR)
	-chown $(ZAPMOWNER) $(GAMEDIR)/zapm
	chmod 04755 $(GAMEDIR)/zapm
	chmod 0755 $(DATADIR)

zapm-oneuser: oneuser zapm
	mkdir -p build
	mkdir -p build/zapm
	mkdir -p build/zapm/user
	strip zapm
	cp zapm build/zapm/
	cp docs/Guide.txt build/zapm
	tar czf zapm.tar.gz -C build zapm

zapm-multiuser: multiuser zapm

zapm: $(OBJS)
	c++ -g -o zapm $(LDPATH) $(LDFLAGS) $(LIBS) $(OBJS)

debug: $(OBJS)
	c++ -g -o zapm $(LDPATH) $(LDFLAGS) $(LIBS) $(OBJS) $(DEBUGLIBS)

clean:
	rm -f zapm *.o config.h dbg.txt gmon.out

cleaner: clean
	rm -f *~ \#*\#

#$(OBJS) : config.h
Monster.o : MonsterData.h

multiuser :
	echo "/* this file is automatically generated!! */ " > config.h
	echo '#define DATADIR $(DATADIR)' >> config.h

oneuser :
	echo "/* this file is automatically generated!! */ " > config.h
	echo '#define DATADIR "user"' >> config.h

MonsterData.h : monsters.dat monsters.pl
	./monsters.pl > MonsterData.h